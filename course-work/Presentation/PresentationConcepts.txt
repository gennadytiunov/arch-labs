Не должно быть незаконченных сценариев (login - logout)
Разбиение на сервисы
Паттерны
Исходим из предположения, что разбиение на микросервисы делается из-за большой нагрузки
1,5 часа в день на все защиты
15-20 защита + вопросы / ответы
Можно прийти на защиту просто посмотреть
Предзащита - при желании

Вставить подпись в презентацию

Презентация
 - ввести актуальные SMTP-настройки
 - использовать личный email
 - посмотреть пример
 - описать события / команды
 - обновить схему взаимодействия сервисов
 - подключение к SQL
 - подготовить выступление


 - Сага с оркестрацией
 - проверка существования Booking при подтверждении
 - обрабатывается, если параметры в запросе указаны некорректно (шоу, время сеанса)
 - семантическая блокировка
 - допущение - стоимость билетов зависит только от сеанса, не зависит от места
 - допущение - нет администраторской части
 - booking service разделён на публичную (доступные места) и приватную части (получение бронирования пользователя)
 - в Sign In вычищается предыдущая сессия (например, от чужого пользователя) и также предварительно очищаются все сессии пользователя который логинится
 - показать структуру проекта
 - нарисовать схему БД


Sessions
Ingress
Idempotency

Валидации параметров, в бронировании - 

Иерархия команд и сообщений, автоматическиая просталения Id, времени.
Компонент дkя сериализации / десериализации

Показать структуру приложения
Еоннекторы
Хэдер вместо куки

Депозиты и оплаты - платёжные транзации

Идемпотетность бронирования - естественный ключ идепотентности (booking Id).
Конкурентность бронирования 

Нарисовать позитивный сценарий

Попробовать отпрвить письмо

Показать решение, развёрнутое в minikube
Показываем отправку запросов в Postman

Написать Стасу
Поиграться с Zoom