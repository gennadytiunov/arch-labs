РАЗОБРАТЬСЯ с ZOOM
https://us05web.zoom.us/j/8416333042?pwd=UEZHU3I3UlJHclZSZG16cHB4UHplQT09
Записаться на защиту
Написать план презентации

Не должно быть незаконченных сценариев (login - logout)
Исходим из предположения, что разбиение на микросервисы делается из-за большой нагрузки
1,5 часа в день на все защиты
15-20 защита + вопросы / ответы
Можно прийти на защиту просто посмотреть
Предзащита - при желании

Обязательно ли использовать PowerPoint-шаблон от OTUS.
Упомянуть про реатраи и transactional outbox
Расписать подробнее подсистему аутентификации

Нет мониторинга / алёртинга - было в рамках ДХ и в проекте на работе.
Event Sourcing - применял на работе.
Устройство аутентификации.
Нагрузочное тестирование.
Почему Kafka.
Почему MS SQL. Данные хранятся без задания связей между таблицами - то есть в принцпие в форме, готовой к разделени на отдельные БД.
Баз шардинга / кэширования.
Есть распределённые транзации / сага с оркестрацией.

Презентация
 - ввести актуальные SMTP-настройки
 - использовать личный email
 - посмотреть пример
 - описать события / команды
 - подключение к SQL
 - подготовить выступление

Приложение и Kafka живут в разных namespaces

 - На слайде с сервисами добавить текст и выделить часть сервисов для авторизации / аутентификации
 - сага с оркестрацией
 - проверка существования Booking при подтверждении
 - обрабатывается, если параметры в запросе указаны некорректно (шоу, время сеанса)
 - семантическая блокировка
 - допущение - стоимость билетов зависит только от сеанса, не зависит от места
 - допущение - нет администраторской части
 - booking service разделён на публичную (доступные места) и приватную части (получение бронирования пользователя)
 - в Sign In вычищается предыдущая сессия (например, от чужого пользователя) и также предварительно очищаются все сессии пользователя который логинится
 - показать структуру проекта
 - нарисовать схему БД

Sessions
Ingress

Валидации параметров, в бронировании - 
Хэдер вместо куки

Депозиты и оплаты - платёжные транзации

Нарисовать позитивный сценарий

Показать решение, развёрнутое в minikube
Показываем отправку запросов в Postman