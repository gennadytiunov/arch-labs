Упомянуть
 - Сага с оркестрацией
 - проверка существования Booking Id при создании - идемпотентность
 - идемпотентность в саге
 - проверка существования Booking при подтверждении
 - обрабатывается, если параметры в запросе указаны некорректно (шоу, время сеанса)
 - семантическая блокировка
 - REST-взаимодействия через коннекторы
 - допущение - стоимость билетов зависит только от сеанса, не зависит от места
 - допущение - нет администраторской части
 - Kafka Message: Event, Command
 - booking service разделён на публичную (доступные места) и приватную части (получение бронирования пользователя)
 - в Sign In вычищается предыдущая сессия (например, от чужого пользователя) и также предварительно очищаются все сессии пользователя который логинится
 - показать структуру проекта
 - идепотентность и конкурентность бронирования обеспечивается на уровне DB-транзакций (isolation level - serialaizable)
 - нарисовать схему БД

Презентация
 - ввести актуальные SMTP-настройки
 - использовать личный email
 - посмотреть пример
 - описать события / команды
 - обновить схему взаимодействия сервисов
 - подключение к SQL
 - подготовить выступление

К курсовой:
 - ручная отмена - после окончания, письмо на отмены
 - переделать обновление профиля, обновить тесты
 - создание топиков
 - логин / пароль к DB в values
 - не давать пополнять аккаунт для удалённого пользователя
 - не давать выполнять бронирование / платёж для удалённого пользователя
 - подключить stdout
 - для processor pods также добавить сылку на config / secret
 - пеернести в config топики и названия консьюмеров
 - Currency - enum
 - Настройки листенеров вынести в конфиг
 - объединить два чарта в один
 - консолидировать логи
 - общие блоки в Helm для эндпоинтов и листенеров
 - недоспустимые события для состояний
 - знаки после запятой 
 - межсервисная авторизация для очередей
 - встроенные health экшны
    
Архитектура / шаблоны 
- Event sourcing / CQRS
- мониторинг
 
Улучшения
 - namespace для kafka в manifest
 - SQL-скрипты: для создания структуры и заполнения данными
 - Primary & Secondary Keys
 - Listeners сделать generic
  
Логика
 - LaunchSettings
 - UML - sequence diagram
 - async в контроллерах

IBookingNotificationHandler : ICommandHandler<NotifyBookingSuccess>, ICommandHandler<NotifyBookingFailure>

Настроить только обработу only once (одним слушателем)
Посмотреть примеры
eShopOnContainers