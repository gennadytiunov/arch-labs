Упомянуть
 - Сага с оркестрацией
 - проверка существования Booking Id при создании - идемпотентность
 - идемпотентность в саге
 - проверка существования Booking при подтверждении
 - обрабатывается, если параметры в запросе указаны некорректно (шоу, время сеанса)
 - семантическая блокировка
 - REST-взаимодействия через коннекторы
 - задержки в payments и notifications - чтобы можно было протестировать промежуточные статусы
 - допущение - стоимость билетов зависит только от сеанса, не зависит от места
 - Kafka Message: Event, Command
 - booking service разделён на публичную (доступные места) и приватную части (получение бронирования пользователя)

Презентация
 - описать события / команды

К курсовой:
 - web app перещелать в profile / web app (либо profile перенести в auth controller)
 - убрать обращение к user service напрямую
 - добавить аутентификацию / авторизацию
   -- за API Gateway скрыть: booking service, payment service, Notification service
   -- скрыть за S2SAuthorization: User Service, Notification service
   -- открытым оставить Timetable Service
   - межсервисная авторизация ([ServiceFilter(typeof(S2SAuthorization))] и очереди)
 - написать Postman коллекцию
 - переписать тесты - сделать идемпотентными
 - не давать пополнять аккаунт для удалённого пользователя
 - не давать размещать аккаунт для удалённого пользователя
 - конкурентность бронирования на уровне БД / транзакций
 - потестировать обращения к сервисам
 - убрать задержки
 - подключить stdout
 - для processor pods также добавить  сылку на config / secret
 - пеернести в config топики и названия консьюмеров
 - нарисовать разбиение сервиса на части
 - подключение через SQL - для демонстрации
 - заполнить данными DB черещ скрипт
 - встроенные health экшны
 - исправить отступы
 - Currency - enum
 - Настройки листенеров вынести в конфиг
 - перемеменовать namespaces
 - объединить два чарта в один
 - консолидировать логи
 - общие блоки в Helm для эндпоинтов и листенеров
 - ручная отмена - после окончания
 - письма на отмены (ручную и автоматическую)
 - renaming EndpointConnector
 - LogDebug vs LogInformation
 - возможно, остальные ключи тоже перевести с int на guid
 - недоспустимые события для состояний
 - знаки после запятой 
    
Архитектура / шаблоны 
- CQRS
- мониторинг
 
Улучшения
 - namaspace для kafka в manifest
 - SQL-скрипты: для создания структуры и заполнения данными
 - Primary & Secondary Keys
 - Listeners сделать generic
  
Логика
 - LaunchSettings
 - UML - sequence diagram
 - async в контроллерах

IBookingNotificationHandler : ICommandHandler<NotifyBookingSuccess>, ICommandHandler<NotifyBookingFailure>

Настроить только обработу only once (одним слушателем)
Посмотреть примеры
eShopOnContainers